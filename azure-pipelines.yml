# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

variables:
  vmImage: ubuntu-latest

  PYTHON_VERSION: '3.11'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(PYTHON_VERSION)'
    architecture: 'x64'

- task: PythonScript@0
  displayName: 'Export project path'
  inputs:
    scriptSource: 'inline'
    script: |
      """Search all subdirectories for `manage.py`."""
      from glob import iglob
      from os import path
      # Python >= 3.5
      manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
      if not manage_py:
          raise SystemExit('Could not find a Django project')
      project_location = path.dirname(path.abspath(manage_py))
      print('Found Django project in', project_location)
      print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))

- script: |
    python -m venv antenv
    source antenv/bin/activate
    python -m pip install --upgrade pip setuptools wheel
    pip install -r requirements.txt
    pip install unittest-xml-reporting
  workingDirectory: '$(projectRoot)'
  displayName: 'Install prerequisites'

- script: |
    pushd '$(projectRoot)'
    python manage.py test --testrunner xmlrunner.extra.djangotestrunner.XMLTestRunner --no-input
  displayName: 'Run tests'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- upload: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
  displayName: 'Upload package'
  artifact: drop
      
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Free Trial (f11689ce-81d2-47f0-bd7e-75382ce2fb9f)'
    appType: 'webAppLinux'
    WebAppName: 'buglgl'
    packageForLinux: '$(Pipeline.Workspace)/$(Build.BuildId).zip'
    RuntimeStack: 'PYTHON|3.11'

